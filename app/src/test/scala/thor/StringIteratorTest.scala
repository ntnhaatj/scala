/*
 * This Scala Testsuite was generated by the Gradle 'init' task.
 */
package thor

import org.junit.runner.RunWith
import org.scalatest.flatspec.AnyFlatSpec
import org.scalatest.matchers.should.Matchers
import org.scalatestplus.junit.JUnitRunner

@RunWith(classOf[JUnitRunner])
class StringIteratorTest extends AnyFlatSpec with Matchers {
  val testString = "this is the test string"

  behavior of "StringIterator"

  it can "iterate all chars in string - by Trait" in {
    val stringIterator = new StringIterator(testString)
    var i              = 0
    stringIterator.forEach(_ => i = i + 1)
    i shouldBe testString.length
  }

  it can "get next char in string - by AbsIterate inf" in {
    val stringIterator = new StringIterator(testString)
    stringIterator.next() shouldBe 't'
    stringIterator.next() shouldBe 'h'
    stringIterator.next() shouldBe 'i'
    stringIterator.next() shouldBe 's'
  }

  it can "check whether next char available when iterating - by AbsIterate inf" in {
    val stringIterator = new StringIterator("s")
    stringIterator.hasNext shouldBe true
    stringIterator.next() shouldBe 's'
    stringIterator.hasNext shouldBe false
  }
}
